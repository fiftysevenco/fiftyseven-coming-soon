!function(){function e(e,t){return!(t.left>=e.right||t.right<=e.left||t.top>=e.bottom||t.bottom<=e.top)}"undefined"!=typeof module&&void 0!==module.exports?module.exports=e:"function"==typeof define&&define.amd?define([],function(){return e}):window.intersectRect=e}();var TEXTURES=[{key:"texture1",src:"assets/images/textures/dis1.jpg"},{key:"texture2",src:"assets/images/textures/dis2.jpg"}],BACKGROUNDS=[{key:"background",src:"assets/images/photo/6-dis.jpg"}],BACKGROUND=BACKGROUNDS[Math.floor(Math.random()*BACKGROUNDS.length)];TEXTURES.push(BACKGROUND);var $visualizer,$backgroundTimeout,$texture1,$texture2,$texture3,$texture4,$displacement1,$displacement2,$displacement3,$displacement4,$moveTimeout,$resizer,RESOURCES=null,EASE_OUT=[0,0,.58,1],$title="FiftySeven® — Design Studio.",$body=$("body"),$winW=$(window).width(),$winH=$(window).height(),$renderer=null,$size=1024,swipeVal=0,soundPlaying=!1,$loaded=!1,$playing=!1,a=document.createElement("audio"),$audio=!(!a.canPlayType||!a.canPlayType("audio/mpeg;").replace(/no/,"")),$ie=!1,$document=$(document),Elements=function(e,t,n){var a=["global","landing","contact"],i={},o=null;return{get:function(e){return o=null,function(){var t=[];_.forEach(a,function(e){t=Array.prototype.slice.call(n.querySelectorAll("#"+e+" [id]")),i[e]=_.reduce(t,function(e,t){return e[_.camelCase(t.getAttribute("id"))]=t,e},{})}),this.initialized=!0}(),void 0!==e?(o=e,this):i},value:function(e){return void 0===e?i[o]:i[o][e]}}}(jQuery,window,document);_.hasIn(jQuery,"fn.blast")&&_.extendWith(jQuery.fn.blast.defaults,{delimiter:"character",customClass:"letter"}),isMobile.phone&&($body.addClass("mobile"),$audio=!1),(document.documentMode||/Edge/.test(navigator.userAgent))&&($ie=!0);var ua=navigator.userAgent.toLowerCase(),isAndroid=-1<ua.indexOf("android");if("CSS"in window&&"supports"in window.CSS){var support=window.CSS.supports("mix-blend-mode","difference");support=support?"mix-blend-mode":"no-mix-blend-mode",isAndroid?$("html").addClass("no-mix-blend-mode"):$("html").addClass(support)}if($audio){var sampleBuffer,sound,frequencyData,analyser,gainNode,audioContext=new(window.AudioContext||window.webkitAudioContext),loop=!0;$ie||(analyser=audioContext.createAnalyser(),(gainNode=audioContext.createGain()).gain.value=1,analyser.fftSize=32,frequencyData=new Uint8Array(analyser.frequencyBinCount),analyser.getByteFrequencyData(frequencyData))}function globalAnimation(e){e=void 0!==e&&e;var t=$("#global").children().get();return{targets:e?t:t.reverse(),translateY:["100%",0],easing:"easeOutExpo",duration:1200,offset:"-=1600",delay:function(e,t){return 200*t},complete:function(){}}}function landingAnimation(e){e=void 0!==e&&e;var t=document.getElementById("fs-logo"),n=Array.prototype.slice.call(t.querySelectorAll("path")),a=$("#projects a").get(),i=n.length,o=$(Elements.get("landing").value("fsLogoSub"));o.blast(!1).blast({delimiter:"character"});var r=$("#cruise-universe"),s=$("#stardust"),d=$("#stardust-line"),u=$("#line"),l=$("#landing").find(".cross-dash"),c=anime.timeline({loop:!1,autoplay:!1,begin:function(){$("#projects").removeClass("animation--complete")}}).add({targets:n.reverse(),translateX:[-40,0],translateZ:0,opacity:[0,1],easing:"easeOutExpo",duration:2e3,delay:function(e,t){return 2e3/i/5*t}}).add({targets:o.children().get(),translateX:[-40,0],translateZ:0,opacity:[0,1],easing:"easeOutExpo",duration:800,offset:20,delay:function(e,t){return 500+30*t}}).add({targets:r.blast({delimiter:"character"}).get(),translateY:["100%",0],easing:"easeOutExpo",duration:800,offset:1e3,delay:function(e,t){return 20*t}}).add({targets:s.blast({delimiter:"character"}).get(),translateY:["100%",0],easing:"easeOutExpo",duration:600,offset:"-=1400",delay:function(e,t){return 20*t}}).add({targets:d.get(),width:[0,"100%"],easing:"easeOutExpo",offset:"-=1100",duration:600}).add({targets:a,translateY:["100%",0],opacity:[0,1],easing:"easeOutExpo",duration:600,offset:"-=600",delay:function(e,t){return 300*t}}).add({targets:l.get(),scaleX:[0,1],opacity:[0,1],duration:1e3,easing:[1,0,0,1]});return e&&c.add({targets:u.get(),translateX:["100%",0],opacity:[0,1],easing:"easeOutExpo",duration:1200,offset:"-=2100"}).add(globalAnimation()),c.finished.then(function(){$("#projects").addClass("animation--complete")}),c}function contactAnimation(e){var t=$(Elements.get("contact").value("imagination")),n=$("#contact").find(".cross-dash");return anime.timeline({autoplay:!1,complete:function(){e instanceof Function&&e.call()}}).add({targets:t.get(),translateY:0,duration:0}).add({targets:t.blast().get(),translateX:[-40,0],opacity:[0,1],duration:800,easing:"easeOutExpo",delay:function(e,t){return 500+30*t}}).add({targets:n.get(),scaleX:[0,1],opacity:[0,1],duration:1e3,offset:"-=1400",easing:[1,0,0,1]}).add({targets:$("#contact .section .outer > span").get(),translateY:["100%",0],duration:600,easing:"easeOutExpo",offset:"-=1000",delay:function(e,t){return 50*t}})}function onResizeStart(e){if(!$body.hasClass("resizing")){var t=$body.attr("data-section"),n=_.extendWith({},Elements.get(t).value()),a=$("#"+t).find(".cross-dash");anime.timeline().add({targets:a.get(),scaleX:[1,0],opacity:[1,0],duration:1e3,easing:[1,0,0,1]}).add({targets:_.values(n),translateY:[0,"100%"],duration:1e3,easing:[1,0,0,1],offset:0,complete:function(){e instanceof Function&&e.call()}})}}function onResizeEnd(){var e=$body.attr("data-section"),t=_.extendWith({},Elements.get(e).value(),{line:$("#line").get()}),n=$("#"+e).find(".cross-dash");anime.timeline().add({targets:n.get(),scaleX:[0,1],opacity:[0,1],duration:1e3,easing:[1,0,0,1]}).add({targets:_.values(t),translateY:0,opacity:[1],duration:1e3,easing:[1,0,0,1],offset:0})}function resize(){onResizeStart(),$body.addClass("resizing"),$body.removeClass("texture-loaded"),$winW=$(window).width(),$winH=$(window).height(),$renderer&&($renderer.destroy(),$renderer=null,$("#texture canvas").remove(),!$("#sound-btn").hasClass("muted")&&soundPlaying&&stopSound()),clearInterval($visualizer),clearTimeout($resizer),$resizer=setTimeout(resizeEnd,600)}function goHome(){var e=$(Elements.get("contact").value("imagination")),t=$("#contact").find(".cross-dash");anime.timeline({complete:function(){$(Elements.get("global").value("contactBtn")).find(".outer > span").text("about");var e=landingAnimation();$body.attr("data-section","landing"),anime({targets:_.values(Elements.get("landing").value()),translateY:0,opacity:1,duration:0,easing:"linear"}),e.play()}}).add({targets:$("#contact .section .outer > span").get().reverse(),translateY:[0,"100%"],duration:600,easing:"easeOutExpo",delay:function(e,t){return 50*t}}).add({targets:t.get(),scaleX:[1,0],opacity:[1,0],duration:1e3,easing:[1,0,0,1]}).add({targets:e.blast().get().reverse(),translateX:[0,-40],opacity:[1,0],duration:800,easing:"easeOutExpo",offset:400,delay:function(e,t){return 500+30*t}}),ga("set",{page:window.location.pathname,title:"Home"}),ga("send","pageview")}function goContact(){onResizeStart(function(){$(Elements.get("global").value("contactBtn")).find(".outer > span").text("back"),$body.attr("data-section","contact");var e=Elements.get("contact").value();anime({targets:_.values(e),translateY:"100%",opacity:1,duration:0,easing:"linear"}),contactAnimation().play()}),ga("set",{page:window.location.pathname,title:"Contact"}),ga("send","pageview")}function resizeEnd(){$renderer&&($displacement1.scale.x=$size,$displacement1.scale.y=$size,$displacement2.scale.x=$size/2,$displacement2.scale.y=$size/2,$displacement3.scale.x=$size,$displacement3.scale.y=$size,$displacement4.scale.x=$size/2,$displacement4.scale.y=$size/2,$texture1.position.x=0,$texture1.position.y=0,$texture2.position.x=0,$texture2.position.y=0,$texture3.position.x=0,$texture3.position.y=0,$texture4.position.x=0,$texture4.position.y=0,$renderer=null),setBackground(function(){$body.addClass("texture-loaded"),onResizeEnd()})}function setBackground(e){$winW=$(window).width(),$winH=$(window).height(),$renderer=PIXI.autoDetectRenderer($winW,$winH,{transparent:!1,autoResize:!0});var t=sxsw.fillscreen(2*$winW,2*$winH,1024,1024),n=t.width,a=t.height,i=-.5*$winW,o=-.5*(a-$winH);PIXI.RESOLUTION=window.devicePixelRatio,$renderer.view.style.position="absolute",$renderer.view.style.left="0px",$renderer.view.style.top="0px",$renderer.view.style.width="100%",$renderer.view.style.height="100%";var r=new PIXI.Container,s=new PIXI.filters.ColorMatrixFilter;$texture1=new PIXI.Sprite(RESOURCES.texture1.texture),$texture2=new PIXI.Sprite(RESOURCES.texture2.texture),$texture3=new PIXI.Sprite(RESOURCES.texture1.texture),$texture4=new PIXI.Sprite(RESOURCES.texture2.texture),$texture1.filters=[s.brightness(1.25)],$texture2.filters=[s.brightness(1.25)],$texture3.filters=[s.brightness(1.25)],$texture4.filters=[s.brightness(1.25)];var d=new PIXI.Sprite(RESOURCES.background.texture),u=new PIXI.Container;$displacement3=new PIXI.filters.DisplacementFilter($texture3),$displacement4=new PIXI.filters.DisplacementFilter($texture4),$displacement3.scale.x=$size/2,$displacement3.scale.y=$size/2,$displacement4.scale.x=$size/4,$displacement4.scale.y=$size/4,d.filters=[$displacement3,$displacement4],d.position.x=i,d.position.y=o,d.width=n,d.height=a,d.alpha=.5,u.addChild($texture3),u.addChild($texture4),u.addChild(d),u.alpha=0,r.addChild(u),r.filters=[s],$("#texture").append($renderer.view),function e(){var t=requestAnimationFrame(e);767<$winW&&($texture1.position.y+=.25,$texture2.position.y+=.25,$texture3.position.y+=-.25,$texture4.position.y+=-.25),$renderer?$renderer.render(r):cancelAnimationFrame(t)}(),$body.removeClass("resizing"),$loaded=!0,clearTimeout($backgroundTimeout);var l=function(){e instanceof Function&&e()};$backgroundTimeout=setTimeout(function(){767<$winW?anime({targets:u,duration:5,alpha:[0,.9],easing:[.17,.67,.83,.67],complete:l}):anime({targets:u,duration:5,alpha:[0,1],easing:[.17,.67,.83,0],complete:l}),$audio&&($("#sound-btn").hasClass("muted")||(loadSound("assets/audio/loop.mp3"),$body.addClass("audio")))},600)}function deviceOrientationHandler(e,t,n){$texture3.position.y=t,$texture4.position.y=-t}function loadSound(e){var t=new XMLHttpRequest;t.open("GET",e,!0),t.responseType="arraybuffer",t.onload=function(){soundPlaying=!0,audioContext.decodeAudioData(t.response,function(e){if(sampleBuffer=e,playSound(0),window.requestAnimationFrame){var t=function(){if($audio&&$playing&&$body.hasClass("texture-loaded")){var e=new Uint8Array(analyser.frequencyBinCount);analyser.getByteFrequencyData(e);var t=2*e[4];$displacement3.scale={x:t,y:t}}};setInterval(function(){window.requestAnimationFrame(t)})}})},t.send()}function setupSound(){(sound=audioContext.createBufferSource()).buffer=sampleBuffer,sound.loop=loop,sound.loopStart=0,sound.loopEnd=sampleBuffer.duration,sound.connect(audioContext.destination),sound.connect(analyser),analyser.connect(audioContext.destination),sound.connect(gainNode),gainNode.connect(audioContext.destination),sound.playbackRate.value=1}function playSound(e){setupSound(),sound.start(e),$playing=!0}function stopSound(){soundPlaying=$playing=!1,gainNode.gain.exponentialRampToValueAtTime(.001,audioContext.currentTime+2),sound.stop(0),clearInterval($visualizer)}History.Adapter.bind(window,"statechange",function(){switch(History.getState().data.state){case 1:goHome();break;case 2:goContact()}}),$(document).ready(function(){$("#year").text((new Date).getFullYear()),swipedetect($document,function(e){var t=$body.attr("data-section"),n=$("#target"),a=$("#dot"),i=window.intersectRect(n.get(0).getBoundingClientRect(),a.get(0).getBoundingClientRect());i&&"right"===e&&"contact"!==t?History.pushState({state:2},"About. "+$title,"/about"):i&&"left"===e&&"contact"===t&&History.pushState({state:1},$title,"/")}),$winW=$(window).width(),$winH=$(window).height(),$("#sound-btn").on("click",function(){$(this).hasClass("muted")?(loadSound("assets/audio/loop.mp3"),$(this).removeClass("muted")):(stopSound(),$(this).addClass("muted"))}),$("#contact-btn").on("click",function(e){"contact"===$body.attr("data-section")?History.pushState({state:1},$title,"/"):History.pushState({state:2},"About. "+$title,"/about")})}).mousemove(function(e){}).mouseup(function(){}),$(window).on("load",function(){var e=document.getElementById("fs-monogram"),n=Array.prototype.slice.call(e.querySelectorAll("path"));$winW=$(window).width(),$winH=$(window).height(),$body.addClass("loaded"),"contact"===$(location).attr("href").split("/").splice(0,5).join("/").split("/")[3]?$(document).prop("title","About. "+$title):$(document).prop("title",$title),$body.attr("data-section","intro"),anime({targets:n,translateX:[-10,0],translateZ:0,opacity:[0,1],easing:"easeOutExpo",duration:1200,offset:0,delay:function(e,t){return 100*t}});var t=PIXI.loader;TEXTURES.forEach(function(e){t.add(e.key,e.src)});var a=document.getElementById("loader"),i=a.querySelector(".loader-inner"),o=0;t.use(function(e,t){var n=(o+=1)/TEXTURES.length*100;i.style.width=n+"%",t(e)}),t.load(function(e,t){setBackground(function(){$body.addClass("texture-loaded"),anime.timeline().add({targets:a,opacity:0,easing:"easeOutExpo",duration:1200,complete:function(){$body.attr("data-section","landing"),landingAnimation(!0).play()}}).add({targets:n,translateX:[0,20],translateZ:0,opacity:{value:0,duration:900},easing:"easeOutExpo",duration:1200,offset:800,delay:function(e,t){return 80*t}})},RESOURCES=t)})}),window.DeviceOrientationEvent&&$winW<=767&&window.addEventListener("deviceorientation",function(e){var t=e.gamma,n=e.beta,a=e.alpha;$loaded&&deviceOrientationHandler(t,n,a)},!1);var sxsw={fillscreen:function(e,t,n,a){var i=a/n;return(a=(n=e)*i)<t&&(n=(a=t)/i),{width:n,height:a}}};function swipedetect(e,t){var n,o,a,i,r,s,d=e[0],u=t||function(e){};d.addEventListener("touchstart",function(e){var t=e.changedTouches[0];n="none",swipeVal=0,o=t.pageX,a=t.pageY,s=(new Date).getTime()},!1),d.addEventListener("touchmove",function(e){var t=e.changedTouches[0];swipeVal=t.pageX;for(var n=o-swipeVal,a=e.srcElement,i=!1;null!==a&&void 0!==a.getAttribute;){if(null!==a.getAttribute("data-scrollable")){i=!0;break}a=a.parentNode}i||(e.preventDefault(),$body.addClass("swiping"),"contact"===$body.attr("data-section")?$("#slider").css("width",Math.max(80-Math.floor(Math.min(Math.max(n,0),window.innerWidth)/(window.innerWidth/80)*4),18)):$("#slider").css("width",Math.max(80+Math.floor(Math.max(Math.min(n,0),-window.innerWidth)/(window.innerWidth/80)*4),18)))},!1),d.addEventListener("touchend",function(e){$body.removeClass("swiping"),clearTimeout($moveTimeout);var t=e.changedTouches[0];i=t.pageX-o,r=t.pageY-a,(new Date).getTime()-s<=2e4&&(60<=Math.abs(i)&&Math.abs(r)<=100?n=i<0?"left":"right":60<=Math.abs(r)&&Math.abs(i)<=100&&(n=r<0?"up":"down")),$moveTimeout=setTimeout(function(){$("#white-fill").animate({left:0},250),$("#slider").animate({width:"80px"},250)},1e3),u(n)},!1)}$(function(){function e(e){$(e.currentTarget).parents("li").toggleClass("link--hover")}$("a","#projects").on("mouseenter",e).on("mouseleave",e)});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
